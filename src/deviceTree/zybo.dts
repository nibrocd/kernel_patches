// SPDX-License-Identifier: GPL-2.0+
/dts-v1/;
#include "zynq-7000.dtsi"
#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/media/xilinx-vip.h>
#include "/home/user/buildroot/src/deviceTree/pl.dtsi"
#include "/home/user/buildroot/src/deviceTree/pcw.dtsi"

/ {
	model = "Digilent Zybo Z7 board";
	compatible = "digilent,zynq-zybo-z7", "xlnx,zynq-7000";

	aliases {
		ethernet0 = &gem0;
		serial0 = &uart1;
	};

	memory@0 {
		device_type = "memory";
		reg = <0x0 0x40000000>;
	};

	chosen {
		bootargs = "";
		stdout-path = "serial0:115200n8";
	};

	gpio-leds {
		compatible = "gpio-leds";

		ld4 {
			label = "zynq-zybo-z7:green:ld4";
			gpios = <&gpio0 7 GPIO_ACTIVE_HIGH>;
		};
	};

	usb_phy0: phy0 {
		#phy-cells = <0>;
		compatible = "usb-nop-xceiv";
		reset-gpios = <&gpio0 46 GPIO_ACTIVE_LOW>;
	};

	pcam_clk: pcam_clk {
		#clock-cells = <0>;
		compatible = "fixed-clock";
		clock-frequency = <12000000>;
	};
	DOVDD: fixed_regulator_DOVDD@0 {
		compatible = "regulator-fixed";
		regulator-name = "DOVDD_reg";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <1800000>;
		gpio = <&gpio0 56 GPIO_ACTIVE_HIGH>;
		startup-delay-us = <50000>;  
		regulator-always-on = "true";
		enable-active-high;
	};
	AVDD: fixed_regulator_AVDD@1 {
		compatible = "regulator-fixed";
		regulator-name = "AVDD_reg";
		regulator-min-microvolt = <2800000>;
		regulator-max-microvolt = <2800000>;
		regulator-always-on = "true";
	};
	DVDD: fixed_regulator_DVDD@2 {
		compatible = "regulator-fixed";
		regulator-name = "DVDD_reg";
		regulator-min-microvolt = <1500000>;
		regulator-max-microvolt = <1500000>;
		regulator-always-on = "true";
	};

};

&clkc {
	ps-clk-frequency = <33333333>;
};

&gem0 {
	status = "okay";
	phy-mode = "rgmii-id";
	phy-handle = <&ethernet_phy>;

	ethernet_phy: ethernet-phy@0 {
		reg = <0>;
		device_type = "ethernet-phy";
	};
};

&sdhci0 {
	status = "okay";
};

&uart1 {
	status = "okay";
};

&usb0 {
	status = "okay";
	dr_mode = "host";
	usb-phy = <&usb_phy0>;
};

&i2c1 {
	clock-frequency = <100000>;
	status = "okay";
};

&i2c0 {
	clock-frequency = <100000>;
	status = "okay";
	ov5640: camera@3c {
		compatible = "ovti,ov5640";
		reg = <0x3c>;
		clocks = <&pcam_clk>;
		clock-names = "xclk";
		DOVDD-supply = <&DOVDD>; /* 1.8v */
		AVDD-supply = <&AVDD>;  /* 2.8v */
		DVDD-supply = <&DVDD>;  /* 1.5v */

		powerdown-gpios = <&gpio0 58 GPIO_ACTIVE_HIGH>;
		reset-gpios = <&gpio0 59 GPIO_ACTIVE_LOW>;
		port {
			ov5640_to_mipi_csi2: endpoint {
				remote-endpoint = <&mipi_csi2_from_ov5640>;
				clock-lanes = <0>;
				data-lanes = <1 2>;
			};
		};
	};
};


&mipi_csi2_rx_subsyst_1 {
	compatible = "xlnx,mipi-csi2-rx-subsystem-5.0";
	clock-names = "lite_aclk", "dphy_clk_200M", "video_aclk";
	reset-gpios = <&gpio0 57 GPIO_ACTIVE_LOW>;
	ports {
		#address-cells = <1>;
		#size-cells = <0>;

		port@0 {
			reg = <0>;
			xlnx,video-format = <XVIP_VF_YUV_422>;
			xlnx,video-width = <8>;
			mipi_csi2_out: endpoint {
				remote-endpoint = <&vcap_in>;
			};
		};
		port@1 {
			reg = <1>;
			xlnx,video-format = <XVIP_VF_YUV_422>;
			xlnx,video-width = <8>;
			mipi_csi2_from_ov5640: endpoint {
				data-lanes = <1 2>;
				remote-endpoint = <&ov5640_to_mipi_csi2>;
			};

		};

	};
};


&v_frmbuf_wr_0 {
	reset-gpios = <&gpio0 54 GPIO_ACTIVE_LOW>;
};

&axi_dynclk_0 {
	compatible = "digilent,axi-dynclk";
	#clock-cells = <0>;
	clocks = <&clkc 15>;
};

&axi_vdma_0 {
	dma-ranges = <0x00000000 0x00000000 0x40000000>;
};
&v_tc_0 {
	compatible = "xlnx,v-tc-5.01.a";
	status = "okay";
};


&amba_pl {
	encoder_0: digilent_encoder {
		compatible = "digilent,drm-encoder";
		digilent,fmax = <150000>;
		digilent,edid-i2c = <&i2c1>;
	};

	xilinx_drm {
		compatible = "xlnx,drm";
		xlnx,vtc = <&v_tc_0>;
		xlnx,connector-type = "HDMIA";
		xlnx,encoder-slave = <&encoder_0>;
		clocks = <&axi_dynclk_0>;
		planes {
			xlnx,pixel-format = "rgb888";
			plane0 {
				dmas = <&axi_vdma_0 0>;
				dma-names = "dma0";
			};
		};
	};


	video_cap {
		compatible = "xlnx,video";
		dmas = <&v_frmbuf_wr_0 0>;
		dma-names = "port0";

		ports {
			#address-cells = <1>;
			#size-cells = <0>;

			port@0 {
				reg = <0>;
				direction = "input";
				vcap_in: endpoint {
					remote-endpoint = <&mipi_csi2_out>;
				};
			};
		};
	};
};
