diff --git a/drivers/media/platform/xilinx/xilinx-csi2rxss.c b/drivers/media/platform/xilinx/xilinx-csi2rxss.c
index 3f01507..bc60354 100644
--- a/drivers/media/platform/xilinx/xilinx-csi2rxss.c
+++ b/drivers/media/platform/xilinx/xilinx-csi2rxss.c
@@ -332,6 +332,8 @@
 #define XCSI_GET_BITSET_STR(val, mask)	(val) & (mask) ? "true" : "false"
 
 #define XCSI_CLK_PROP		BIT(0)
+#define XCSI_DPHY_PROP		BIT(1)
+#define XCSI_DPHY_ADDR_PROP	BIT(2)
 
 /**
  * struct xcsi2rxss_feature - dt or IP property structure
@@ -501,7 +503,7 @@ struct xcsi2rxss_state {
 	struct xcsi2rxss_core core;
 	struct v4l2_subdev subdev;
 	struct v4l2_ctrl_handler ctrl_handler;
-	struct v4l2_mbus_framefmt formats[2];
+	struct v4l2_mbus_framefmt formats;
 	struct v4l2_mbus_framefmt default_format;
 	const struct xvip_video_format *vip_format;
 	struct v4l2_event event;
@@ -512,6 +514,14 @@ struct xcsi2rxss_state {
 	bool suspended;
 };
 
+static const struct xcsi2rxss_feature xlnx_csi2rxss_v5_0 = {
+	.flags = XCSI_CLK_PROP | XCSI_DPHY_PROP | XCSI_DPHY_ADDR_PROP,
+};
+
+static const struct xcsi2rxss_feature xlnx_csi2rxss_v4_1 = {
+	.flags = XCSI_CLK_PROP | XCSI_DPHY_PROP,
+};
+
 static const struct xcsi2rxss_feature xlnx_csi2rxss_v4_0 = {
 	.flags = XCSI_CLK_PROP,
 };
@@ -527,6 +537,10 @@ static const struct of_device_id xcsi2rxss_of_id_table[] = {
 		.data = &xlnx_csi2rxss_v2_0 },
 	{ .compatible = "xlnx,mipi-csi2-rx-subsystem-4.0",
 		.data = &xlnx_csi2rxss_v4_0 },
+	{ .compatible = "xlnx,mipi-csi2-rx-subsystem-4.1",
+		.data = &xlnx_csi2rxss_v4_1 },
+	{ .compatible = "xlnx,mipi-csi2-rx-subsystem-5.0",
+		.data = &xlnx_csi2rxss_v5_0 },
 	{ }
 };
 MODULE_DEVICE_TABLE(of, xcsi2rxss_of_id_table);
@@ -1293,7 +1307,7 @@ __xcsi2rxss_get_pad_format(struct xcsi2rxss_state *xcsi2rxss,
 	case V4L2_SUBDEV_FORMAT_TRY:
 		return v4l2_subdev_get_try_format(&xcsi2rxss->subdev, cfg, pad);
 	case V4L2_SUBDEV_FORMAT_ACTIVE:
-		return &xcsi2rxss->formats[pad];
+		return &xcsi2rxss->formats;
 	default:
 		return NULL;
 	}
@@ -1358,6 +1372,15 @@ static int xcsi2rxss_set_format(struct v4l2_subdev *sd,
 	__format = __xcsi2rxss_get_pad_format(xcsi2rxss, cfg,
 						fmt->pad, fmt->which);
 
+	/*
+	 * If trying to set format on source pad, then
+	 * return the format set on sink pad
+	 */
+	if (fmt->pad == 0) {
+		fmt->format = *__format;
+		goto unlock_set_fmt;
+	}
+
 	/* Save the pad format code */
 	code = __format->code;
 
@@ -1400,6 +1423,7 @@ static int xcsi2rxss_set_format(struct v4l2_subdev *sd,
 		__format->height = fmt->format.height;
 	}
 
+unlock_set_fmt:
 	mutex_unlock(&xcsi2rxss->lock);
 
 	return 0;
@@ -1613,11 +1637,24 @@ static int xcsi2rxss_parse_of(struct xcsi2rxss_state *xcsi2rxss)
 	dev_dbg(core->dev, "IIC present property = %s\n",
 			iic_present ? "Present" : "Absent");
 
+	if (iic_present && (core->cfg->flags & XCSI_DPHY_PROP)) {
+		/*
+		 * In IP v4.1 the DPHY offset is 0x10000, if present,
+		 * and the iic is removed from subsystem.
+		 */
+		dev_err(core->dev, "Invalid case - IIC present!");
+		return -EINVAL;
+	}
+
 	if (core->dphy_present) {
-		if (iic_present)
+		if (iic_present) {
 			core->dphy_offset = 0x20000;
-		else
-			core->dphy_offset = 0x10000;
+		} else {
+			if (core->cfg->flags & XCSI_DPHY_ADDR_PROP)
+				core->dphy_offset = 0x1000;
+			else
+				core->dphy_offset = 0x10000;
+		}
 	}
 
 	ret = of_property_read_u32(node, "xlnx,max-lanes",
@@ -1687,7 +1724,7 @@ static int xcsi2rxss_parse_of(struct xcsi2rxss_state *xcsi2rxss)
 		int ret;
 		const struct xvip_video_format *format;
 		struct device_node *endpoint;
-		struct v4l2_fwnode_endpoint v4lendpoint;
+		struct v4l2_fwnode_endpoint v4lendpoint = { 0 };
 
 		if (!port->name || of_node_cmp(port->name, "port"))
 			continue;
@@ -1914,8 +1951,7 @@ static int xcsi2rxss_probe(struct platform_device *pdev)
 	xcsi2rxss->default_format.width = XCSI_DEFAULT_WIDTH;
 	xcsi2rxss->default_format.height = XCSI_DEFAULT_HEIGHT;
 
-	xcsi2rxss->formats[0] = xcsi2rxss->default_format;
-	xcsi2rxss->formats[1] = xcsi2rxss->default_format;
+	xcsi2rxss->formats = xcsi2rxss->default_format;
 
 	/* Initialize V4L2 subdevice and media entity */
 	subdev = &xcsi2rxss->subdev;
@@ -1959,6 +1995,8 @@ static int xcsi2rxss_probe(struct platform_device *pdev)
 			if (xcsi2rxss->core.enable_active_lanes) {
 				xcsi2rxss_ctrls[i].max =
 					xcsi2rxss->core.max_num_lanes;
+				xcsi2rxss_ctrls[i].def =
+					xcsi2rxss->core.max_num_lanes;
 			} else {
 				/* Don't register control */
 				dev_dbg(xcsi2rxss->core.dev,
